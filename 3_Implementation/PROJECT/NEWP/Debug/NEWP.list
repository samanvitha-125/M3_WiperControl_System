
NEWP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004dc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000684  0800068c  0001068c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000684  08000684  0001068c  2**0
                  CONTENTS
  4 .ARM          00000000  08000684  08000684  0001068c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000684  0800068c  0001068c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000684  08000684  00010684  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000688  08000688  00010688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001068c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001068c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001068c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000095  00000000  00000000  000106bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000061  00000000  00000000  00010751  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000107b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000030  00000000  00000000  00010800  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000ae3  00000000  00000000  00010830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000380  00000000  00000000  00011313  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00002f2d  00000000  00000000  00011693  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000145c0  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000058  00000000  00000000  00014610  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800066c 	.word	0x0800066c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800066c 	.word	0x0800066c

080001e8 <main>:
//Adding Base address and offset address to clear Previous Switch settings


//STARTING of Main PROGRAM
int main()
{
 80001e8:	b480      	push	{r7}
 80001ea:	b085      	sub	sp, #20
 80001ec:	af00      	add	r7, sp, #0
	int i,b=0,j=0;  //Declaring and Initilizing Variables
 80001ee:	2300      	movs	r3, #0
 80001f0:	60bb      	str	r3, [r7, #8]
 80001f2:	2300      	movs	r3, #0
 80001f4:	607b      	str	r3, [r7, #4]
	RCC_AHB1ENR |= (1<<3)|(1<<0); //Enabling the LED and the switch
 80001f6:	4b93      	ldr	r3, [pc, #588]	; (8000444 <main+0x25c>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	4a92      	ldr	r2, [pc, #584]	; (8000444 <main+0x25c>)
 80001fc:	f043 0309 	orr.w	r3, r3, #9
 8000200:	6013      	str	r3, [r2, #0]
	GPIOD_MODE = 0; //For Clear LED
 8000202:	4b91      	ldr	r3, [pc, #580]	; (8000448 <main+0x260>)
 8000204:	2200      	movs	r2, #0
 8000206:	601a      	str	r2, [r3, #0]
	GPIOA_MODE = 0; //For Clear Switch
 8000208:	4b90      	ldr	r3, [pc, #576]	; (800044c <main+0x264>)
 800020a:	2200      	movs	r2, #0
 800020c:	601a      	str	r2, [r3, #0]
	GPIOA_IDR |= 1<<3;
 800020e:	4b90      	ldr	r3, [pc, #576]	; (8000450 <main+0x268>)
 8000210:	681b      	ldr	r3, [r3, #0]
 8000212:	4a8f      	ldr	r2, [pc, #572]	; (8000450 <main+0x268>)
 8000214:	f043 0308 	orr.w	r3, r3, #8
 8000218:	6013      	str	r3, [r2, #0]
	GPIOD_MODE |= (0<<25)|(1<<24);  //to assign LED 12 as output pin
 800021a:	4b8b      	ldr	r3, [pc, #556]	; (8000448 <main+0x260>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a8a      	ldr	r2, [pc, #552]	; (8000448 <main+0x260>)
 8000220:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000224:	6013      	str	r3, [r2, #0]
	GPIOD_MODE |= (0<<27)|(1<<26);  //to assign LED 13 as output pin
 8000226:	4b88      	ldr	r3, [pc, #544]	; (8000448 <main+0x260>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	4a87      	ldr	r2, [pc, #540]	; (8000448 <main+0x260>)
 800022c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000230:	6013      	str	r3, [r2, #0]
	GPIOD_MODE |= (0<<29)|(1<<28);  //to assign LED 14 as output pin
 8000232:	4b85      	ldr	r3, [pc, #532]	; (8000448 <main+0x260>)
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	4a84      	ldr	r2, [pc, #528]	; (8000448 <main+0x260>)
 8000238:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800023c:	6013      	str	r3, [r2, #0]
	GPIOD_MODE |= (0<<31)|(1<<30);  //to assign LED 14 as output pin as per the Datasheet
 800023e:	4b82      	ldr	r3, [pc, #520]	; (8000448 <main+0x260>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	4a81      	ldr	r2, [pc, #516]	; (8000448 <main+0x260>)
 8000244:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000248:	6013      	str	r3, [r2, #0]
	GPIOA_MODE |= (0<<1)|(0<<0);    //to assign Switch as input pin as per the Datasheet
 800024a:	4b80      	ldr	r3, [pc, #512]	; (800044c <main+0x264>)
 800024c:	4a7f      	ldr	r2, [pc, #508]	; (800044c <main+0x264>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	6013      	str	r3, [r2, #0]
	GPIOD_ODR = 0X00;
 8000252:	4b80      	ldr	r3, [pc, #512]	; (8000454 <main+0x26c>)
 8000254:	2200      	movs	r2, #0
 8000256:	601a      	str	r2, [r3, #0]
	while(1)
	{
					while((GPIOA_IDR & 0x01) == 1) // Switch Status On
 8000258:	e002      	b.n	8000260 <main+0x78>
					{
						b++; //Increment for Switch
 800025a:	68bb      	ldr	r3, [r7, #8]
 800025c:	3301      	adds	r3, #1
 800025e:	60bb      	str	r3, [r7, #8]
					while((GPIOA_IDR & 0x01) == 1) // Switch Status On
 8000260:	4b7b      	ldr	r3, [pc, #492]	; (8000450 <main+0x268>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	f003 0301 	and.w	r3, r3, #1
 8000268:	2b01      	cmp	r3, #1
 800026a:	d0f6      	beq.n	800025a <main+0x72>
					}
					if(b>1000)
 800026c:	68bb      	ldr	r3, [r7, #8]
 800026e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8000272:	dd12      	ble.n	800029a <main+0xb2>
				    {
					b=0;//RED Led should be in ON state
 8000274:	2300      	movs	r3, #0
 8000276:	60bb      	str	r3, [r7, #8]
					GPIOD_ODR |= 1<<14;
 8000278:	4b76      	ldr	r3, [pc, #472]	; (8000454 <main+0x26c>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4a75      	ldr	r2, [pc, #468]	; (8000454 <main+0x26c>)
 800027e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000282:	6013      	str	r3, [r2, #0]
					for(i=0;i<100000;i++);
 8000284:	2300      	movs	r3, #0
 8000286:	60fb      	str	r3, [r7, #12]
 8000288:	e002      	b.n	8000290 <main+0xa8>
 800028a:	68fb      	ldr	r3, [r7, #12]
 800028c:	3301      	adds	r3, #1
 800028e:	60fb      	str	r3, [r7, #12]
 8000290:	68fb      	ldr	r3, [r7, #12]
 8000292:	4a71      	ldr	r2, [pc, #452]	; (8000458 <main+0x270>)
 8000294:	4293      	cmp	r3, r2
 8000296:	ddf8      	ble.n	800028a <main+0xa2>
 8000298:	e008      	b.n	80002ac <main+0xc4>
					}
					else if(b>0 && b<1000)
 800029a:	68bb      	ldr	r3, [r7, #8]
 800029c:	2b00      	cmp	r3, #0
 800029e:	dd05      	ble.n	80002ac <main+0xc4>
 80002a0:	68bb      	ldr	r3, [r7, #8]
 80002a2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80002a6:	da01      	bge.n	80002ac <main+0xc4>
					{
					j=1;
 80002a8:	2301      	movs	r3, #1
 80002aa:	607b      	str	r3, [r7, #4]
                    }
					else
					{

					}
						if(j==1)
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	2b01      	cmp	r3, #1
 80002b0:	d1d6      	bne.n	8000260 <main+0x78>
						{

					    // For frequency = 1HZ

				        for(j=0;j<5;j++) //For LED GREEN
 80002b2:	2300      	movs	r3, #0
 80002b4:	607b      	str	r3, [r7, #4]
 80002b6:	e024      	b.n	8000302 <main+0x11a>
						{
						GPIOD_ODR |= 1<<12;
 80002b8:	4b66      	ldr	r3, [pc, #408]	; (8000454 <main+0x26c>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a65      	ldr	r2, [pc, #404]	; (8000454 <main+0x26c>)
 80002be:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002c2:	6013      	str	r3, [r2, #0]
						for(i=0;i<10000;i++);
 80002c4:	2300      	movs	r3, #0
 80002c6:	60fb      	str	r3, [r7, #12]
 80002c8:	e002      	b.n	80002d0 <main+0xe8>
 80002ca:	68fb      	ldr	r3, [r7, #12]
 80002cc:	3301      	adds	r3, #1
 80002ce:	60fb      	str	r3, [r7, #12]
 80002d0:	68fb      	ldr	r3, [r7, #12]
 80002d2:	f242 720f 	movw	r2, #9999	; 0x270f
 80002d6:	4293      	cmp	r3, r2
 80002d8:	ddf7      	ble.n	80002ca <main+0xe2>
						GPIOD_ODR &= ~(1<<12);
 80002da:	4b5e      	ldr	r3, [pc, #376]	; (8000454 <main+0x26c>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4a5d      	ldr	r2, [pc, #372]	; (8000454 <main+0x26c>)
 80002e0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80002e4:	6013      	str	r3, [r2, #0]
						for(i=0;i>=10000;i++);
 80002e6:	2300      	movs	r3, #0
 80002e8:	60fb      	str	r3, [r7, #12]
 80002ea:	e002      	b.n	80002f2 <main+0x10a>
 80002ec:	68fb      	ldr	r3, [r7, #12]
 80002ee:	3301      	adds	r3, #1
 80002f0:	60fb      	str	r3, [r7, #12]
 80002f2:	68fb      	ldr	r3, [r7, #12]
 80002f4:	f242 720f 	movw	r2, #9999	; 0x270f
 80002f8:	4293      	cmp	r3, r2
 80002fa:	dcf7      	bgt.n	80002ec <main+0x104>
				        for(j=0;j<5;j++) //For LED GREEN
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	3301      	adds	r3, #1
 8000300:	607b      	str	r3, [r7, #4]
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	2b04      	cmp	r3, #4
 8000306:	ddd7      	ble.n	80002b8 <main+0xd0>
						}
						for(j=0;j<5;j++)  //For LED ORANGE
 8000308:	2300      	movs	r3, #0
 800030a:	607b      	str	r3, [r7, #4]
 800030c:	e024      	b.n	8000358 <main+0x170>
						{
						GPIOD_ODR |= 1<<13;
 800030e:	4b51      	ldr	r3, [pc, #324]	; (8000454 <main+0x26c>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	4a50      	ldr	r2, [pc, #320]	; (8000454 <main+0x26c>)
 8000314:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000318:	6013      	str	r3, [r2, #0]
						for(i=0;i<10000;i++);
 800031a:	2300      	movs	r3, #0
 800031c:	60fb      	str	r3, [r7, #12]
 800031e:	e002      	b.n	8000326 <main+0x13e>
 8000320:	68fb      	ldr	r3, [r7, #12]
 8000322:	3301      	adds	r3, #1
 8000324:	60fb      	str	r3, [r7, #12]
 8000326:	68fb      	ldr	r3, [r7, #12]
 8000328:	f242 720f 	movw	r2, #9999	; 0x270f
 800032c:	4293      	cmp	r3, r2
 800032e:	ddf7      	ble.n	8000320 <main+0x138>
						GPIOD_ODR &= ~(1<<13);
 8000330:	4b48      	ldr	r3, [pc, #288]	; (8000454 <main+0x26c>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a47      	ldr	r2, [pc, #284]	; (8000454 <main+0x26c>)
 8000336:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800033a:	6013      	str	r3, [r2, #0]
					    for(i=0;i>=10000;i++);
 800033c:	2300      	movs	r3, #0
 800033e:	60fb      	str	r3, [r7, #12]
 8000340:	e002      	b.n	8000348 <main+0x160>
 8000342:	68fb      	ldr	r3, [r7, #12]
 8000344:	3301      	adds	r3, #1
 8000346:	60fb      	str	r3, [r7, #12]
 8000348:	68fb      	ldr	r3, [r7, #12]
 800034a:	f242 720f 	movw	r2, #9999	; 0x270f
 800034e:	4293      	cmp	r3, r2
 8000350:	dcf7      	bgt.n	8000342 <main+0x15a>
						for(j=0;j<5;j++)  //For LED ORANGE
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	3301      	adds	r3, #1
 8000356:	607b      	str	r3, [r7, #4]
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	2b04      	cmp	r3, #4
 800035c:	ddd7      	ble.n	800030e <main+0x126>
						}
						for(j=0;j<5;j++)   //For LED BLUE
 800035e:	2300      	movs	r3, #0
 8000360:	607b      	str	r3, [r7, #4]
 8000362:	e024      	b.n	80003ae <main+0x1c6>
						{
						GPIOD_ODR |= 1<<15;
 8000364:	4b3b      	ldr	r3, [pc, #236]	; (8000454 <main+0x26c>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4a3a      	ldr	r2, [pc, #232]	; (8000454 <main+0x26c>)
 800036a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800036e:	6013      	str	r3, [r2, #0]
						for(i=0;i<10000;i++);
 8000370:	2300      	movs	r3, #0
 8000372:	60fb      	str	r3, [r7, #12]
 8000374:	e002      	b.n	800037c <main+0x194>
 8000376:	68fb      	ldr	r3, [r7, #12]
 8000378:	3301      	adds	r3, #1
 800037a:	60fb      	str	r3, [r7, #12]
 800037c:	68fb      	ldr	r3, [r7, #12]
 800037e:	f242 720f 	movw	r2, #9999	; 0x270f
 8000382:	4293      	cmp	r3, r2
 8000384:	ddf7      	ble.n	8000376 <main+0x18e>
						GPIOD_ODR &= ~(1<<15);
 8000386:	4b33      	ldr	r3, [pc, #204]	; (8000454 <main+0x26c>)
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	4a32      	ldr	r2, [pc, #200]	; (8000454 <main+0x26c>)
 800038c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000390:	6013      	str	r3, [r2, #0]
						for(i=0;i>=10000;i++);
 8000392:	2300      	movs	r3, #0
 8000394:	60fb      	str	r3, [r7, #12]
 8000396:	e002      	b.n	800039e <main+0x1b6>
 8000398:	68fb      	ldr	r3, [r7, #12]
 800039a:	3301      	adds	r3, #1
 800039c:	60fb      	str	r3, [r7, #12]
 800039e:	68fb      	ldr	r3, [r7, #12]
 80003a0:	f242 720f 	movw	r2, #9999	; 0x270f
 80003a4:	4293      	cmp	r3, r2
 80003a6:	dcf7      	bgt.n	8000398 <main+0x1b0>
						for(j=0;j<5;j++)   //For LED BLUE
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	3301      	adds	r3, #1
 80003ac:	607b      	str	r3, [r7, #4]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	2b04      	cmp	r3, #4
 80003b2:	ddd7      	ble.n	8000364 <main+0x17c>
						}

						 // For frequency = 4HZ

						for(j=0;j<5;j++)  //For LED GREEN
 80003b4:	2300      	movs	r3, #0
 80003b6:	607b      	str	r3, [r7, #4]
 80003b8:	e024      	b.n	8000404 <main+0x21c>
						{
						GPIOD_ODR |= 1<<12;
 80003ba:	4b26      	ldr	r3, [pc, #152]	; (8000454 <main+0x26c>)
 80003bc:	681b      	ldr	r3, [r3, #0]
 80003be:	4a25      	ldr	r2, [pc, #148]	; (8000454 <main+0x26c>)
 80003c0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80003c4:	6013      	str	r3, [r2, #0]
						for(i=0;i<40000;i++);
 80003c6:	2300      	movs	r3, #0
 80003c8:	60fb      	str	r3, [r7, #12]
 80003ca:	e002      	b.n	80003d2 <main+0x1ea>
 80003cc:	68fb      	ldr	r3, [r7, #12]
 80003ce:	3301      	adds	r3, #1
 80003d0:	60fb      	str	r3, [r7, #12]
 80003d2:	68fb      	ldr	r3, [r7, #12]
 80003d4:	f649 423f 	movw	r2, #39999	; 0x9c3f
 80003d8:	4293      	cmp	r3, r2
 80003da:	ddf7      	ble.n	80003cc <main+0x1e4>
						GPIOD_ODR &= ~(1<<12);
 80003dc:	4b1d      	ldr	r3, [pc, #116]	; (8000454 <main+0x26c>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	4a1c      	ldr	r2, [pc, #112]	; (8000454 <main+0x26c>)
 80003e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80003e6:	6013      	str	r3, [r2, #0]
						for(i=0;i>=40000;i++);
 80003e8:	2300      	movs	r3, #0
 80003ea:	60fb      	str	r3, [r7, #12]
 80003ec:	e002      	b.n	80003f4 <main+0x20c>
 80003ee:	68fb      	ldr	r3, [r7, #12]
 80003f0:	3301      	adds	r3, #1
 80003f2:	60fb      	str	r3, [r7, #12]
 80003f4:	68fb      	ldr	r3, [r7, #12]
 80003f6:	f649 423f 	movw	r2, #39999	; 0x9c3f
 80003fa:	4293      	cmp	r3, r2
 80003fc:	dcf7      	bgt.n	80003ee <main+0x206>
						for(j=0;j<5;j++)  //For LED GREEN
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	3301      	adds	r3, #1
 8000402:	607b      	str	r3, [r7, #4]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	2b04      	cmp	r3, #4
 8000408:	ddd7      	ble.n	80003ba <main+0x1d2>
						}
						for(j=0;j<5;j++)  //For LED ORANGE
 800040a:	2300      	movs	r3, #0
 800040c:	607b      	str	r3, [r7, #4]
 800040e:	e030      	b.n	8000472 <main+0x28a>
						{
						GPIOD_ODR |= 1<<13;
 8000410:	4b10      	ldr	r3, [pc, #64]	; (8000454 <main+0x26c>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a0f      	ldr	r2, [pc, #60]	; (8000454 <main+0x26c>)
 8000416:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800041a:	6013      	str	r3, [r2, #0]
						for(i=0;i<40000;i++);
 800041c:	2300      	movs	r3, #0
 800041e:	60fb      	str	r3, [r7, #12]
 8000420:	e002      	b.n	8000428 <main+0x240>
 8000422:	68fb      	ldr	r3, [r7, #12]
 8000424:	3301      	adds	r3, #1
 8000426:	60fb      	str	r3, [r7, #12]
 8000428:	68fb      	ldr	r3, [r7, #12]
 800042a:	f649 423f 	movw	r2, #39999	; 0x9c3f
 800042e:	4293      	cmp	r3, r2
 8000430:	ddf7      	ble.n	8000422 <main+0x23a>
						GPIOD_ODR &= ~(1<<13);
 8000432:	4b08      	ldr	r3, [pc, #32]	; (8000454 <main+0x26c>)
 8000434:	681b      	ldr	r3, [r3, #0]
 8000436:	4a07      	ldr	r2, [pc, #28]	; (8000454 <main+0x26c>)
 8000438:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800043c:	6013      	str	r3, [r2, #0]
						for(i=0;i>=40000;i++);
 800043e:	2300      	movs	r3, #0
 8000440:	60fb      	str	r3, [r7, #12]
 8000442:	e00e      	b.n	8000462 <main+0x27a>
 8000444:	40023830 	.word	0x40023830
 8000448:	40020c00 	.word	0x40020c00
 800044c:	40020000 	.word	0x40020000
 8000450:	40020010 	.word	0x40020010
 8000454:	40020c14 	.word	0x40020c14
 8000458:	0001869f 	.word	0x0001869f
 800045c:	68fb      	ldr	r3, [r7, #12]
 800045e:	3301      	adds	r3, #1
 8000460:	60fb      	str	r3, [r7, #12]
 8000462:	68fb      	ldr	r3, [r7, #12]
 8000464:	f649 423f 	movw	r2, #39999	; 0x9c3f
 8000468:	4293      	cmp	r3, r2
 800046a:	dcf7      	bgt.n	800045c <main+0x274>
						for(j=0;j<5;j++)  //For LED ORANGE
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	3301      	adds	r3, #1
 8000470:	607b      	str	r3, [r7, #4]
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	2b04      	cmp	r3, #4
 8000476:	ddcb      	ble.n	8000410 <main+0x228>
						}
						for(j=0;j<5;j++)  //For LED BLUE
 8000478:	2300      	movs	r3, #0
 800047a:	607b      	str	r3, [r7, #4]
 800047c:	e024      	b.n	80004c8 <main+0x2e0>
						{
						GPIOD_ODR |= 1<<15;
 800047e:	4b52      	ldr	r3, [pc, #328]	; (80005c8 <main+0x3e0>)
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	4a51      	ldr	r2, [pc, #324]	; (80005c8 <main+0x3e0>)
 8000484:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000488:	6013      	str	r3, [r2, #0]
						for(i=0;i<40000;i++);
 800048a:	2300      	movs	r3, #0
 800048c:	60fb      	str	r3, [r7, #12]
 800048e:	e002      	b.n	8000496 <main+0x2ae>
 8000490:	68fb      	ldr	r3, [r7, #12]
 8000492:	3301      	adds	r3, #1
 8000494:	60fb      	str	r3, [r7, #12]
 8000496:	68fb      	ldr	r3, [r7, #12]
 8000498:	f649 423f 	movw	r2, #39999	; 0x9c3f
 800049c:	4293      	cmp	r3, r2
 800049e:	ddf7      	ble.n	8000490 <main+0x2a8>
					    GPIOD_ODR &= ~(1<<15);
 80004a0:	4b49      	ldr	r3, [pc, #292]	; (80005c8 <main+0x3e0>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	4a48      	ldr	r2, [pc, #288]	; (80005c8 <main+0x3e0>)
 80004a6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80004aa:	6013      	str	r3, [r2, #0]
						for(i=0;i>=40000;i++);
 80004ac:	2300      	movs	r3, #0
 80004ae:	60fb      	str	r3, [r7, #12]
 80004b0:	e002      	b.n	80004b8 <main+0x2d0>
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	3301      	adds	r3, #1
 80004b6:	60fb      	str	r3, [r7, #12]
 80004b8:	68fb      	ldr	r3, [r7, #12]
 80004ba:	f649 423f 	movw	r2, #39999	; 0x9c3f
 80004be:	4293      	cmp	r3, r2
 80004c0:	dcf7      	bgt.n	80004b2 <main+0x2ca>
						for(j=0;j<5;j++)  //For LED BLUE
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	3301      	adds	r3, #1
 80004c6:	607b      	str	r3, [r7, #4]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	2b04      	cmp	r3, #4
 80004cc:	ddd7      	ble.n	800047e <main+0x296>
						}
						 // For frequency = 8HZ

						for(j=0;j<5;j++)  //For LED GREEN
 80004ce:	2300      	movs	r3, #0
 80004d0:	607b      	str	r3, [r7, #4]
 80004d2:	e022      	b.n	800051a <main+0x332>
					    {
						GPIOD_ODR |= 1<<12;
 80004d4:	4b3c      	ldr	r3, [pc, #240]	; (80005c8 <main+0x3e0>)
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	4a3b      	ldr	r2, [pc, #236]	; (80005c8 <main+0x3e0>)
 80004da:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80004de:	6013      	str	r3, [r2, #0]
						for(i=0;i<80000;i++);
 80004e0:	2300      	movs	r3, #0
 80004e2:	60fb      	str	r3, [r7, #12]
 80004e4:	e002      	b.n	80004ec <main+0x304>
 80004e6:	68fb      	ldr	r3, [r7, #12]
 80004e8:	3301      	adds	r3, #1
 80004ea:	60fb      	str	r3, [r7, #12]
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	4a37      	ldr	r2, [pc, #220]	; (80005cc <main+0x3e4>)
 80004f0:	4293      	cmp	r3, r2
 80004f2:	ddf8      	ble.n	80004e6 <main+0x2fe>
						GPIOD_ODR &= ~(1<<12);
 80004f4:	4b34      	ldr	r3, [pc, #208]	; (80005c8 <main+0x3e0>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	4a33      	ldr	r2, [pc, #204]	; (80005c8 <main+0x3e0>)
 80004fa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80004fe:	6013      	str	r3, [r2, #0]
						for(i=0;i>=80000;i++);
 8000500:	2300      	movs	r3, #0
 8000502:	60fb      	str	r3, [r7, #12]
 8000504:	e002      	b.n	800050c <main+0x324>
 8000506:	68fb      	ldr	r3, [r7, #12]
 8000508:	3301      	adds	r3, #1
 800050a:	60fb      	str	r3, [r7, #12]
 800050c:	68fb      	ldr	r3, [r7, #12]
 800050e:	4a2f      	ldr	r2, [pc, #188]	; (80005cc <main+0x3e4>)
 8000510:	4293      	cmp	r3, r2
 8000512:	dcf8      	bgt.n	8000506 <main+0x31e>
						for(j=0;j<5;j++)  //For LED GREEN
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	3301      	adds	r3, #1
 8000518:	607b      	str	r3, [r7, #4]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	2b04      	cmp	r3, #4
 800051e:	ddd9      	ble.n	80004d4 <main+0x2ec>
						}
						for(j=0;j<5;j++)  //For LED ORANGE
 8000520:	2300      	movs	r3, #0
 8000522:	607b      	str	r3, [r7, #4]
 8000524:	e022      	b.n	800056c <main+0x384>
						{
						GPIOD_ODR |= 1<<13;
 8000526:	4b28      	ldr	r3, [pc, #160]	; (80005c8 <main+0x3e0>)
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a27      	ldr	r2, [pc, #156]	; (80005c8 <main+0x3e0>)
 800052c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000530:	6013      	str	r3, [r2, #0]
						for(i=0;i<80000;i++);
 8000532:	2300      	movs	r3, #0
 8000534:	60fb      	str	r3, [r7, #12]
 8000536:	e002      	b.n	800053e <main+0x356>
 8000538:	68fb      	ldr	r3, [r7, #12]
 800053a:	3301      	adds	r3, #1
 800053c:	60fb      	str	r3, [r7, #12]
 800053e:	68fb      	ldr	r3, [r7, #12]
 8000540:	4a22      	ldr	r2, [pc, #136]	; (80005cc <main+0x3e4>)
 8000542:	4293      	cmp	r3, r2
 8000544:	ddf8      	ble.n	8000538 <main+0x350>
						GPIOD_ODR &= ~(1<<13);
 8000546:	4b20      	ldr	r3, [pc, #128]	; (80005c8 <main+0x3e0>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	4a1f      	ldr	r2, [pc, #124]	; (80005c8 <main+0x3e0>)
 800054c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000550:	6013      	str	r3, [r2, #0]
						for(i=0;i>=80000;i++);
 8000552:	2300      	movs	r3, #0
 8000554:	60fb      	str	r3, [r7, #12]
 8000556:	e002      	b.n	800055e <main+0x376>
 8000558:	68fb      	ldr	r3, [r7, #12]
 800055a:	3301      	adds	r3, #1
 800055c:	60fb      	str	r3, [r7, #12]
 800055e:	68fb      	ldr	r3, [r7, #12]
 8000560:	4a1a      	ldr	r2, [pc, #104]	; (80005cc <main+0x3e4>)
 8000562:	4293      	cmp	r3, r2
 8000564:	dcf8      	bgt.n	8000558 <main+0x370>
						for(j=0;j<5;j++)  //For LED ORANGE
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	3301      	adds	r3, #1
 800056a:	607b      	str	r3, [r7, #4]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	2b04      	cmp	r3, #4
 8000570:	ddd9      	ble.n	8000526 <main+0x33e>
						}
						for(j=0;j<5;j++)  //For LED BLUE
 8000572:	2300      	movs	r3, #0
 8000574:	607b      	str	r3, [r7, #4]
 8000576:	e022      	b.n	80005be <main+0x3d6>
						{
						GPIOD_ODR |= 1<<15;
 8000578:	4b13      	ldr	r3, [pc, #76]	; (80005c8 <main+0x3e0>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	4a12      	ldr	r2, [pc, #72]	; (80005c8 <main+0x3e0>)
 800057e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000582:	6013      	str	r3, [r2, #0]
						for(i=0;i<80000;i++);
 8000584:	2300      	movs	r3, #0
 8000586:	60fb      	str	r3, [r7, #12]
 8000588:	e002      	b.n	8000590 <main+0x3a8>
 800058a:	68fb      	ldr	r3, [r7, #12]
 800058c:	3301      	adds	r3, #1
 800058e:	60fb      	str	r3, [r7, #12]
 8000590:	68fb      	ldr	r3, [r7, #12]
 8000592:	4a0e      	ldr	r2, [pc, #56]	; (80005cc <main+0x3e4>)
 8000594:	4293      	cmp	r3, r2
 8000596:	ddf8      	ble.n	800058a <main+0x3a2>
						GPIOD_ODR &= ~(1<<15);
 8000598:	4b0b      	ldr	r3, [pc, #44]	; (80005c8 <main+0x3e0>)
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	4a0a      	ldr	r2, [pc, #40]	; (80005c8 <main+0x3e0>)
 800059e:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80005a2:	6013      	str	r3, [r2, #0]
						for(i=0;i>=80000;i++);
 80005a4:	2300      	movs	r3, #0
 80005a6:	60fb      	str	r3, [r7, #12]
 80005a8:	e002      	b.n	80005b0 <main+0x3c8>
 80005aa:	68fb      	ldr	r3, [r7, #12]
 80005ac:	3301      	adds	r3, #1
 80005ae:	60fb      	str	r3, [r7, #12]
 80005b0:	68fb      	ldr	r3, [r7, #12]
 80005b2:	4a06      	ldr	r2, [pc, #24]	; (80005cc <main+0x3e4>)
 80005b4:	4293      	cmp	r3, r2
 80005b6:	dcf8      	bgt.n	80005aa <main+0x3c2>
						for(j=0;j<5;j++)  //For LED BLUE
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	3301      	adds	r3, #1
 80005bc:	607b      	str	r3, [r7, #4]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	2b04      	cmp	r3, #4
 80005c2:	ddd9      	ble.n	8000578 <main+0x390>
					while((GPIOA_IDR & 0x01) == 1) // Switch Status On
 80005c4:	e64c      	b.n	8000260 <main+0x78>
 80005c6:	bf00      	nop
 80005c8:	40020c14 	.word	0x40020c14
 80005cc:	0001387f 	.word	0x0001387f

080005d0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005d0:	480d      	ldr	r0, [pc, #52]	; (8000608 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005d2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80005d4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005d8:	480c      	ldr	r0, [pc, #48]	; (800060c <LoopForever+0x6>)
  ldr r1, =_edata
 80005da:	490d      	ldr	r1, [pc, #52]	; (8000610 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005dc:	4a0d      	ldr	r2, [pc, #52]	; (8000614 <LoopForever+0xe>)
  movs r3, #0
 80005de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005e0:	e002      	b.n	80005e8 <LoopCopyDataInit>

080005e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005e6:	3304      	adds	r3, #4

080005e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005ec:	d3f9      	bcc.n	80005e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005ee:	4a0a      	ldr	r2, [pc, #40]	; (8000618 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005f0:	4c0a      	ldr	r4, [pc, #40]	; (800061c <LoopForever+0x16>)
  movs r3, #0
 80005f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005f4:	e001      	b.n	80005fa <LoopFillZerobss>

080005f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005f8:	3204      	adds	r2, #4

080005fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005fc:	d3fb      	bcc.n	80005f6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005fe:	f000 f811 	bl	8000624 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000602:	f7ff fdf1 	bl	80001e8 <main>

08000606 <LoopForever>:

LoopForever:
    b LoopForever
 8000606:	e7fe      	b.n	8000606 <LoopForever>
  ldr   r0, =_estack
 8000608:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800060c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000610:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000614:	0800068c 	.word	0x0800068c
  ldr r2, =_sbss
 8000618:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800061c:	2000001c 	.word	0x2000001c

08000620 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000620:	e7fe      	b.n	8000620 <ADC_IRQHandler>
	...

08000624 <__libc_init_array>:
 8000624:	b570      	push	{r4, r5, r6, lr}
 8000626:	4d0d      	ldr	r5, [pc, #52]	; (800065c <__libc_init_array+0x38>)
 8000628:	4c0d      	ldr	r4, [pc, #52]	; (8000660 <__libc_init_array+0x3c>)
 800062a:	1b64      	subs	r4, r4, r5
 800062c:	10a4      	asrs	r4, r4, #2
 800062e:	2600      	movs	r6, #0
 8000630:	42a6      	cmp	r6, r4
 8000632:	d109      	bne.n	8000648 <__libc_init_array+0x24>
 8000634:	4d0b      	ldr	r5, [pc, #44]	; (8000664 <__libc_init_array+0x40>)
 8000636:	4c0c      	ldr	r4, [pc, #48]	; (8000668 <__libc_init_array+0x44>)
 8000638:	f000 f818 	bl	800066c <_init>
 800063c:	1b64      	subs	r4, r4, r5
 800063e:	10a4      	asrs	r4, r4, #2
 8000640:	2600      	movs	r6, #0
 8000642:	42a6      	cmp	r6, r4
 8000644:	d105      	bne.n	8000652 <__libc_init_array+0x2e>
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	f855 3b04 	ldr.w	r3, [r5], #4
 800064c:	4798      	blx	r3
 800064e:	3601      	adds	r6, #1
 8000650:	e7ee      	b.n	8000630 <__libc_init_array+0xc>
 8000652:	f855 3b04 	ldr.w	r3, [r5], #4
 8000656:	4798      	blx	r3
 8000658:	3601      	adds	r6, #1
 800065a:	e7f2      	b.n	8000642 <__libc_init_array+0x1e>
 800065c:	08000684 	.word	0x08000684
 8000660:	08000684 	.word	0x08000684
 8000664:	08000684 	.word	0x08000684
 8000668:	08000688 	.word	0x08000688

0800066c <_init>:
 800066c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066e:	bf00      	nop
 8000670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000672:	bc08      	pop	{r3}
 8000674:	469e      	mov	lr, r3
 8000676:	4770      	bx	lr

08000678 <_fini>:
 8000678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067a:	bf00      	nop
 800067c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067e:	bc08      	pop	{r3}
 8000680:	469e      	mov	lr, r3
 8000682:	4770      	bx	lr
